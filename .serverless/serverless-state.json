{
  "service": {
    "service": "ccg",
    "serviceObject": {
      "name": "ccg"
    },
    "provider": {
      "environment": {
        "APP_ENDPOINT": "http://ccg-dev-frontend.s3-website-us-east-1.amazonaws.com",
        "DYNAMODB_TABLE": {
          "Ref": "dynamodbTable"
        },
        "SHOPIFY_API_KEY": "5d9c7da289fe90dcde12d6cdc8cf3a45",
        "SHOPIFY_API_SECRET": "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",
        "SHOPIFY_API_VERSION": "2020-10"
      },
      "httpApi": {
        "cors": true
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": "*"
        }
      ],
      "name": "aws",
      "profile": "personal",
      "region": "us-east-1",
      "runtime": "python3.8",
      "stage": "dev",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetUnderscorepermissionUnderscoreurlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ccg-dev-get_permission_url"
            }
          },
          "AppUnderscoreinstalledLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ccg-dev-app_installed"
            }
          },
          "AppUnderscoreuninstalledLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ccg-dev-app_uninstalled"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "ccg",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ccg-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ccg-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ccg",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetUnderscorepermissionUnderscoreurlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ccg/dev/1616471084214-2021-03-23T03:44:44.214Z/ccg.zip"
              },
              "Handler": "backend/endpoints/install.get_permission_url",
              "Runtime": "python3.8",
              "FunctionName": "ccg-dev-get_permission_url",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "APP_ENDPOINT": "http://ccg-dev-frontend.s3-website-us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"DYNAMODB_TABLE\"]"
                  },
                  "SHOPIFY_API_KEY": "5d9c7da289fe90dcde12d6cdc8cf3a45",
                  "SHOPIFY_API_SECRET": "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",
                  "SHOPIFY_API_VERSION": "2020-10"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscorepermissionUnderscoreurlLogGroup"
            ]
          },
          "AppUnderscoreinstalledLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ccg/dev/1616471084214-2021-03-23T03:44:44.214Z/ccg.zip"
              },
              "Handler": "backend/endpoints/install.app_installed",
              "Runtime": "python3.8",
              "FunctionName": "ccg-dev-app_installed",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "APP_ENDPOINT": "http://ccg-dev-frontend.s3-website-us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"DYNAMODB_TABLE\"]"
                  },
                  "SHOPIFY_API_KEY": "5d9c7da289fe90dcde12d6cdc8cf3a45",
                  "SHOPIFY_API_SECRET": "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",
                  "SHOPIFY_API_VERSION": "2020-10"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppUnderscoreinstalledLogGroup"
            ]
          },
          "AppUnderscoreuninstalledLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ccg/dev/1616471084214-2021-03-23T03:44:44.214Z/ccg.zip"
              },
              "Handler": "backend/endpoints/install.app_uninstalled",
              "Runtime": "python3.8",
              "FunctionName": "ccg-dev-app_uninstalled",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "APP_ENDPOINT": "http://ccg-dev-frontend.s3-website-us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"DYNAMODB_TABLE\"]"
                  },
                  "SHOPIFY_API_KEY": "5d9c7da289fe90dcde12d6cdc8cf3a45",
                  "SHOPIFY_API_SECRET": "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",
                  "SHOPIFY_API_VERSION": "2020-10"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppUnderscoreuninstalledLogGroup"
            ]
          },
          "AppUnderscoreuninstalledLambdaVersionTvVEugV3TWUVcwBvWPaaUVT0fVqgt8JerYGKpeRU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppUnderscoreuninstalledLambdaFunction"
              },
              "CodeSha256": "ksVFk0gQ1RYjoyqnoVTdS+Tpr/ufgGu/jssJFvadRjs="
            }
          },
          "AppUnderscoreinstalledLambdaVersion5nhfMc9RDocaT8BmXIrmM53SpqnSEa1Xj7XQcUWLN5s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppUnderscoreinstalledLambdaFunction"
              },
              "CodeSha256": "ksVFk0gQ1RYjoyqnoVTdS+Tpr/ufgGu/jssJFvadRjs="
            }
          },
          "GetUnderscorepermissionUnderscoreurlLambdaVersiongTwUzU5TeIlWKutxafu4Vhuaf3XttJuTs8xy40fSxRc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscorepermissionUnderscoreurlLambdaFunction"
              },
              "CodeSha256": "ksVFk0gQ1RYjoyqnoVTdS+Tpr/ufgGu/jssJFvadRjs="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-ccg",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "GET"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetUnderscorepermissionUnderscoreurlLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscorepermissionUnderscoreurlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscorepermissionUnderscoreurl": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscorepermissionUnderscoreurlLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRouteGetGetpermissionurl": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_permission_url",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscorepermissionUnderscoreurl"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscorepermissionUnderscoreurl"
          },
          "AppUnderscoreinstalledLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppUnderscoreinstalledLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAppUnderscoreinstalled": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AppUnderscoreinstalledLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRouteGetAppinstalled": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /app_installed",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAppUnderscoreinstalled"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAppUnderscoreinstalled"
          },
          "AppUnderscoreuninstalledLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppUnderscoreuninstalledLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAppUnderscoreuninstalled": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AppUnderscoreuninstalledLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRouteGetAppuninstalled": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /app_uninstalled",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAppUnderscoreuninstalled"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAppUnderscoreuninstalled"
          },
          "dynamodbTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "KeySchema": [
                {
                  "AttributeName": "resource_id",
                  "KeyType": "HASH"
                }
              ],
              "AttributeDefinitions": [
                {
                  "AttributeName": "resource_id",
                  "AttributeType": "S"
                }
              ]
            }
          },
          "s3FrontendBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "AccessControl": "PublicRead",
              "BucketName": "ccg-dev-frontend",
              "LoggingConfiguration": {
                "DestinationBucketName": {
                  "Ref": "s3FrontendAccessLogsBucket"
                },
                "LogFilePrefix": "ccg-access-logs"
              },
              "WebsiteConfiguration": {
                "IndexDocument": "index.html",
                "ErrorDocument": "index.html"
              }
            }
          },
          "s3FrontendAccessLogsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "AccessControl": "LogDeliveryWrite",
              "BucketName": "ccg-dev-frontend-access-logs"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "AppUnderscoreuninstalledLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppUnderscoreuninstalledLambdaVersionTvVEugV3TWUVcwBvWPaaUVT0fVqgt8JerYGKpeRU"
            }
          },
          "AppUnderscoreinstalledLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppUnderscoreinstalledLambdaVersion5nhfMc9RDocaT8BmXIrmM53SpqnSEa1Xj7XQcUWLN5s"
            }
          },
          "GetUnderscorepermissionUnderscoreurlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscorepermissionUnderscoreurlLambdaVersiongTwUzU5TeIlWKutxafu4Vhuaf3XttJuTs8xy40fSxRc"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            }
          },
          "dynamodbTableName": {
            "Value": {
              "Ref": "dynamodbTable"
            },
            "Description": "DynamoDB Table`"
          },
          "s3FrontendBucketWebsiteURL": {
            "Value": {
              "Fn::GetAtt": [
                "s3FrontendBucket",
                "WebsiteURL"
              ]
            },
            "Description": "URL for the frontend website hosted on S3"
          },
          "s3FrontendAccessLogsBucketName": {
            "Value": {
              "Ref": "s3FrontendAccessLogsBucket"
            },
            "Description": "Frontend access logs bucket name"
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "output": {
        "file": "stack.yml"
      },
      "pythonRequirements": {
        "dockerizePip": "non-linux"
      }
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-stack-output"
    ],
    "pluginsData": {},
    "functions": {
      "get_permission_url": {
        "handler": "backend/endpoints/install.get_permission_url",
        "events": [
          {
            "httpApi": {
              "path": "/get_permission_url",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/get_permission_url"
          }
        ],
        "name": "ccg-dev-get_permission_url",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetUnderscorepermissionUnderscoreurlLambdaVersiongTwUzU5TeIlWKutxafu4Vhuaf3XttJuTs8xy40fSxRc"
      },
      "app_installed": {
        "handler": "backend/endpoints/install.app_installed",
        "events": [
          {
            "httpApi": {
              "path": "/app_installed",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/app_installed"
          }
        ],
        "name": "ccg-dev-app_installed",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "AppUnderscoreinstalledLambdaVersion5nhfMc9RDocaT8BmXIrmM53SpqnSEa1Xj7XQcUWLN5s"
      },
      "app_uninstalled": {
        "handler": "backend/endpoints/install.app_uninstalled",
        "events": [
          {
            "httpApi": {
              "path": "/app_uninstalled",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/app_uninstalled"
          }
        ],
        "name": "ccg-dev-app_uninstalled",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "AppUnderscoreuninstalledLambdaVersionTvVEugV3TWUVcwBvWPaaUVT0fVqgt8JerYGKpeRU"
      }
    },
    "resources": {
      "Resources": {
        "dynamodbTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "KeySchema": [
              {
                "AttributeName": "resource_id",
                "KeyType": "HASH"
              }
            ],
            "AttributeDefinitions": [
              {
                "AttributeName": "resource_id",
                "AttributeType": "S"
              }
            ]
          }
        },
        "s3FrontendBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "PublicRead",
            "BucketName": "ccg-dev-frontend",
            "LoggingConfiguration": {
              "DestinationBucketName": {
                "Ref": "s3FrontendAccessLogsBucket"
              },
              "LogFilePrefix": "ccg-access-logs"
            },
            "WebsiteConfiguration": {
              "IndexDocument": "index.html",
              "ErrorDocument": "index.html"
            }
          }
        },
        "s3FrontendAccessLogsBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "LogDeliveryWrite",
            "BucketName": "ccg-dev-frontend-access-logs"
          }
        }
      },
      "Outputs": {
        "dynamodbTableName": {
          "Value": {
            "Ref": "dynamodbTable"
          },
          "Description": "DynamoDB Table`"
        },
        "s3FrontendBucketWebsiteURL": {
          "Value": {
            "Fn::GetAtt": [
              "s3FrontendBucket",
              "WebsiteURL"
            ]
          },
          "Description": "URL for the frontend website hosted on S3"
        },
        "s3FrontendAccessLogsBucketName": {
          "Value": {
            "Ref": "s3FrontendAccessLogsBucket"
          },
          "Description": "Frontend access logs bucket name"
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": false,
        "include": [
          "./backend/**"
        ],
        "exclude": [
          "**"
        ],
        "artifact": "/home/jwalz/Code/Personal/custom-cart-generator/.serverless/ccg.zip",
        "artifactDirectoryName": "serverless/ccg/dev/1616471084214-2021-03-23T03:44:44.214Z"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/jwalz/Code/Personal/custom-cart-generator/.serverless/ccg.zip"
  },
  "package": {
    "individually": false,
    "artifactDirectoryName": "serverless/ccg/dev/1616471084214-2021-03-23T03:44:44.214Z",
    "artifact": "ccg.zip"
  }
}