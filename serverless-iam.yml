Resources:
  iamCognitoAuthRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: ${self:service}-${self:provider.stage}-cognito-auth-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "authenticated"
              "StringEquals":
                "cognito-identity.amazonaws.com:aud": !Ref cognitoIdentityPool
            Principal:
              Federated:
                - "cognito-identity.amazonaws.com"
      Policies:
        - PolicyName: ${self:service}-${self:provider.stage}-cognito-auth-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cognito-identity:*"
                  - "cognito-sync:*"
                  - "mobileanalytics:PutEvents"
                Resource: "*"

  iamCognitoMfaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cognito-idp.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "SSOCognitoSNSPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "sns:publish"
                Resource: "*"

  iamCognitoUnauthRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: ${self:service}-${self:provider.stage}-cognito-unauth-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "authenticated"
              "StringEquals":
                "cognito-identity.amazonaws.com:aud": !Ref cognitoIdentityPool
            Principal:
              Federated:
                - "cognito-identity.amazonaws.com"
      Policies:
        - PolicyName: ${self:service}-${self:provider.stage}-cognito-unauth-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cognito-sync:*"
                  - "mobileanalytics:PutEvents"
                Resource: "*"

  iamReadRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:service}-${self:provider.stage}-read-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonCognitoReadOnly"
        - "arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"

  iamReadWriteRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:service}-${self:provider.stage}-read-write-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonCognitoPowerUser"
        - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"

  UserPoolLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: cognito-idp.amazonaws.com
      FunctionName: ${self:service}-${self:provider.stage}-pre_authentication
      SourceArn: arn:aws:cognito-idp:us-east-1:419013314217:userpool/us-east-1_UV1tqhg72
